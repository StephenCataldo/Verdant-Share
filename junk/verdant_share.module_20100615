<?php
// $Id: formblock.module,v 1.4.2.2 2008/12/10 02:42:39 mikeyp Exp $

/********** The rideshare view *****************************************/

/* function verdant_carpool_view
 *	We have a default view, pull in the current user's content_profile rideshare
 *	node, and modify the filtered search based on their preferences.
 *		Alternative idea: could simply generate a URL that presets the filters 
 */

function verdant_share_menu() {
	$items = array();

	//Carpool map page
	$items['share/rides/map'] = array(
		'title' => 'Verdan_Share Rideshare Map',
		'description' => 'A map for sharing rides via the module',
		'page callback' => 'verdant_share_map_page',
		'access arguments' => array('access content'), //!!! reimplement? 
		'type' => MENU_NORMAL_ITEM
	);

	return $items;
}

function verdant_share_map_page() {
	$view = verdant_share_get_carpool_view();
	//print '<pre>';
	//print_r($view);

	//return 'We got here';
	//die("we got here function verdant_share_map_page");

	// tried lots of things where default or embed would go
	//	Map gmap page_2 ... could have the answer and ahve missed it from cache
	return $view->execute_display('page_2', array());
	//print views_build_view('gmap', $view);

}

// This hook simply tells views that this module supports Views API 2
//   I'm not sure what path does, saw it while trying to figure out
//	 why this view isn't showing up, exportable, editable, enableable
function verdant_share_views_api() {
		return array(
			'api' => 2,
			'path' => drupal_get_path('module', 'modulename'),
		);
}


// Two approaches.  One is to create the view and call it.
//  The other is to create it as a default, accessible to the admin online

function verdant_share_get_carpool_view() {

	/*           $type = 'share_ride';
	          global $user;
	          $account = $user;
						          $blocks['subject'] = t('My Carpool Info');
						          $blocks['content'] =
												            '<div id="verdant_rideshare">' . content_profile_page_edit($type, $account) . '</div>';
	 */
	/* First style   Get the user's content_profile for share_ride */
	$type = 'share_ride';
  global $user;
	$ride_share = content_profile_load($type, $user->uid, $lang = '')	;

	$my_arrival_time = array()
		;
	if ( defined ($ride_share->field_arrival_time) ) {
		foreach ( $ride_share->field_arrival_time as $item ) {
			$my_arrival_time[$item['value']] = $item['value'];
		}
	}
	$my_departure_time = array();

  if ( defined($ride_share->field_departure_time) ) {
		foreach ( $ride_share->field_departure_time as $item ) {
			$my_departure_time[$item['value']] = $item['value'];
		}
	}

	/*** SECOND STYLE, generate links ****/
	$arriveGET = array();
	$match_arrive_base =  'field_arrival_time_value_many_to_one[]=';
	if ( is_array($ride_share->field_arrival_time) ) {
		foreach ( $ride_share->field_arrival_time as $item ) {
			$arriveGET[] = $match_arrive_base . $item['value'];
		}
	}
	$arrive_fragment = implode('&', $arriveGET);

	$departGET = array();
	$match_depart_base =  'field_departure_time_value_many_to_one[]=';
	if ( is_array($ride_share->field_departure_time) ) {
		foreach ( $ride_share->field_departure_time as $item ) {
			$departGET[] = $match_depart_base . $item['value'];
		}
	}
	$depart_fragment = implode('&', $departGET);

	$middlefavorites = "flagged_favorites=All&unflagged_remove=0";
	$favorites = "flagged_favorites=1&unflagged_remove=0";
	$check_removed = "flagged_favorites=All&unflagged_remove=1";

	//!!! create an active trail for these menu-like items, or make them
 	// real menu items 	
	$l_all = "<a href=\"$base?$middlefavorites\" 
			title=\"All shares except those you have removed\" >All</a>";
	$l_arrive = "<a href=\"$base?$middlefavorites&$arrive_fragment\" 
			title=\"\" >Match My Arrival</a>";
	$l_depart = "<a href=\"$base?$middlefavorites&$depart_fragment\" 
			title=\"\" >Match My Departure</a>";
	$l_match = "<a href=\"$base?$middlefavorites&$depart_fragment&$arrive_fragment\" 
			title=\"\" >Matches</a>";
	$l_favs = "<a href=\"$base?$favorites\" 
			title=\"\" >Favorites Only</a>";
	$l_removed = "<a href=\"$base?$check_removed\" style=\"font-size: .9em;\"
			title=\"\" >Check Previously Removed</a>";
	
	$id = "views-exposed-form-verdant-module-generated-rideshare-page-2"; // !!!
			// !!! not generic	
	/*var obj= document.getElementById($id);
	obj.style.visibility = "visible";  */
	$vis = "<a href=\"javascript: var obj= document.getElementById($id); obj.style.visibility = 'invisible'\">Power Options</a>";

	$quicklinks = "$l_all | $l_arrive | $l_depart | $l_match | $l_favs | $l_removed | $vis";

	/* And the view, originally an export
				tips: http://drupal.org/node/685432 */
	// replaced with line below... $view = new view;
	// Create a new view
	$view = views_new_view();

	// define the view with code form an export (will be modified?)
	// change name...
	$view->name = 'verdant_module_generated_rideshare';
	$view->description = 'Rideshare View';
	$view->tag = 'share';
	$view->view_php = '';
	$view->base_table = 'node';
	$view->is_cacheable = FALSE;
	$view->api_version = 2;
	$view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
	$handler = $view->new_display('default', 'Defaults', 'default');
	$handler->override_option('title', 'Share the Ride'); // new, working?!!!
	$handler->override_option('relationships', array(
		'flag_content_rel' => array(
			'label' => 'Favorite?',
			'required' => 0,
			'flag' => 'share_prefer',
			'user_scope' => 'current',
			'id' => 'flag_content_rel',
			'table' => 'node',
			'field' => 'flag_content_rel',
			'override' => array(
				'button' => 'Override',
			),
			'relationship' => 'none',
		),
		'flag_content_rel_1' => array(
			'label' => 'Remove?',
			'required' => 0,
			'flag' => 'share_remove',
			'user_scope' => 'current',
			'id' => 'flag_content_rel_1',
			'table' => 'node',
			'field' => 'flag_content_rel',
			'relationship' => 'none',
		),
	));
	$handler->override_option('fields', array(
		'picture' => array(
			'label' => 'Picture',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'imagecache_preset' => '3',
			'exclude' => 0,
			'id' => 'picture',
			'table' => 'users',
			'field' => 'picture',
			'relationship' => 'none',
		),
		'name' => array(
			'label' => 'Name',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'link_to_user' => 1,
			'overwrite_anonymous' => 0,
			'anonymous_text' => '',
			'exclude' => 0,
			'id' => 'name',
			'table' => 'users',
			'field' => 'name',
			'relationship' => 'none',
		),
		'contact' => array(
			'label' => 'Contact',
			'alter' => array(
				'alter_text' => 1,
				'text' => '<div class="contact-share">[contact]</div>',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'text' => 'contact',
			'link_display' => 'icon',
			'exclude' => 0,
			'id' => 'contact',
			'table' => 'users',
			'field' => 'contact',
			'relationship' => 'none',
			'override' => array(
				'button' => 'Override',
			),
		),
		'field_arrival_time_value' => array(
			'label' => 'Arrive',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'link_to_node' => 0,
			'label_type' => 'custom',
			'format' => 'default',
			'multiple' => array(
				'group' => TRUE,
				'multiple_number' => '',
				'multiple_from' => '',
				'multiple_reversed' => FALSE,
			),
			'exclude' => 0,
			'repeat' => array(
				'show_repeat_rule' => '',
			),
			'fromto' => array(
				'fromto' => 'both',
			),
			'id' => 'field_arrival_time_value',
			'table' => 'node_data_field_arrival_time',
			'field' => 'field_arrival_time_value',
			'relationship' => 'none',
			'override' => array(
				'button' => 'Override',
			),
		),
		'field_departure_time_value' => array(
			'label' => 'Depart',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'link_to_node' => 0,
			'label_type' => 'custom',
			'format' => 'default',
			'multiple' => array(
				'multiple_number' => '',
				'multiple_from' => '',
				'multiple_to' => '',
				'group' => TRUE,
			),
			'repeat' => array(
				'show_repeat_rule' => '',
			),
			'fromto' => array(
				'fromto' => 'both',
			),
			'exclude' => 0,
			'id' => 'field_departure_time_value',
			'table' => 'node_data_field_departure_time',
			'field' => 'field_departure_time_value',
			'relationship' => 'none',
			'override' => array(
				'button' => 'Override',
			),
		),
		'city' => array(
			'label' => 'City',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'exclude' => 0,
			'id' => 'city',
			'table' => 'location',
			'field' => 'city',
			'override' => array(
				'button' => 'Override',
			),
			'relationship' => 'none',
		),
		'distance' => array(
			'label' => 'Distance',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'origin' => 'user',
			'units' => 'km',
			'latitude' => '',
			'longitude' => '',
			'exclude' => 0,
			'id' => 'distance',
			'table' => 'location',
			'field' => 'distance',
			'override' => array(
				'button' => 'Override',
			),
			'relationship' => 'none',
		),
		'created' => array(
			'label' => 'Post date',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'date_format' => 'raw time ago',
			'custom_date_format' => '',
			'exclude' => 0,
			'id' => 'created',
			'table' => 'node',
			'field' => 'created',
			'override' => array(
				'button' => 'Override',
			),
			'relationship' => 'none',
		),
		'tid' => array(
			'label' => 'All terms',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'type' => 'separator',
			'separator' => ', ',
			'link_to_taxonomy' => 1,
			'limit' => 1,
			'vids' => array(
				'1' => 1,
			),
			'exclude' => 0,
			'id' => 'tid',
			'table' => 'term_node',
			'field' => 'tid',
			'relationship' => 'none',
		),
		'ops' => array(
			'label' => 'Flag link',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'link_type' => '',
			'exclude' => 0,
			'id' => 'ops',
			'table' => 'flag_content',
			'field' => 'ops',
			'relationship' => 'flag_content_rel',
			'override' => array(
				'button' => 'Override',
			),
		),
		'ops_1' => array(
			'label' => 'Flag link',
			'alter' => array(
				'alter_text' => 0,
				'text' => '',
				'make_link' => 0,
				'path' => '',
				'link_class' => '',
				'alt' => '',
				'prefix' => '',
				'suffix' => '',
				'target' => '',
				'help' => '',
				'trim' => 0,
				'max_length' => '',
				'word_boundary' => 1,
				'ellipsis' => 1,
				'strip_tags' => 0,
				'html' => 0,
			),
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'link_type' => '',
			'exclude' => 0,
			'id' => 'ops_1',
			'table' => 'flag_content',
			'field' => 'ops',
			'relationship' => 'flag_content_rel_1',
			'override' => array(
				'button' => 'Override',
			),
		),
	));
	$handler->override_option('sorts', array(
		'timestamp' => array(
			'order' => 'DESC',
			'granularity' => 'year',
			'id' => 'timestamp',
			'table' => 'flag_content',
			'field' => 'timestamp',
			'relationship' => 'flag_content_rel',
		),
		'timestamp_1' => array(
			'order' => 'ASC',
			'granularity' => 'year',
			'id' => 'timestamp_1',
			'table' => 'flag_content',
			'field' => 'timestamp',
			'relationship' => 'flag_content_rel_1',
		),
	));
	$handler->override_option('filters', array(
		'status' => array(
			'operator' => '=',
			'value' => '1',
			'group' => '0',
			'exposed' => FALSE,
			'expose' => array(
				'operator' => FALSE,
				'label' => '',
			),
			'id' => 'status',
			'table' => 'node',
			'field' => 'status',
			'relationship' => 'none',
		),
		'type' => array(
			'operator' => 'in',
			'value' => array(
				'share_ride' => 'share_ride',
			),
			'group' => '0',
			'exposed' => FALSE,
			'expose' => array(
				'operator' => FALSE,
				'label' => '',
			),
			'id' => 'type',
			'table' => 'node',
			'field' => 'type',
			'relationship' => 'none',
			    'override' => array(    // cataldo -- added from export later?
						      'button' => 'Override',
									    ),
		),
		'field_arrival_time_value_many_to_one' => array(
			'operator' => 'or',
			'value' => $my_arrival_time,  /* set default to my arrival time  */
			'group' => '0',
			'exposed' => TRUE,
			'expose' => array(
				'use_operator' => 0,
				'operator' => 'field_arrival_time_value_many_to_one_op',
				'identifier' => 'field_arrival_time_value_many_to_one',
				'label' => 'Arrival',
				'optional' => 1,
				'single' => 0,
				'remember' => 0,
				'reduce' => 0,
			),
			'id' => 'field_arrival_time_value_many_to_one',
			'table' => 'node_data_field_arrival_time',
			'field' => 'field_arrival_time_value_many_to_one',
			'override' => array(
				'button' => 'Override',
			),
			'relationship' => 'none',
			'reduce_duplicates' => 1,
		),
		'field_departure_time_value_many_to_one' => array(
			'operator' => 'or',
			'value' => $my_departure_time,
			'group' => '0',
			'exposed' => TRUE,
			'expose' => array(
				'use_operator' => 0,
				'operator' => 'field_departure_time_value_many_to_one_op',
				'identifier' => 'field_departure_time_value_many_to_one',
				'label' => 'Departures',
				'optional' => 1,
				'single' => 0,
				'remember' => 0,
				'reduce' => 0,
			),
			'id' => 'field_departure_time_value_many_to_one',
			'table' => 'node_data_field_departure_time',
			'field' => 'field_departure_time_value_many_to_one',
			'relationship' => 'none',
			'reduce_duplicates' => 1,
						// adding override by hand, to duplicate arrival 
			      'override' => array(
							        'button' => 'Override',
											      ),

		),
		'flagged' => array(
			'operator' => '=',
			'value' => 'All', //'Any', // !!! was 1, meaning true?
			'group' => '0',
			'exposed' => TRUE,
			'expose' => array(
				'operator' => '',
				'identifier' => 'flagged_favorites',
				'label' => 'Favorites',
				'optional' => 1,
				'remember' => 1,    // !!! 1
			),
			'id' => 'flagged',
			'table' => 'flag_content',
			'field' => 'flagged',
			'relationship' => 'flag_content_rel',
			    'override' => array(     // added later
						      'button' => 'Override',
									    ),
		),
		'flagged_1' => array(
			'operator' => '=',
			'value' => '0',
			'group' => '0',
			'exposed' => TRUE,
			'expose' => array(
				'operator' => '',
				'identifier' => 'unflagged_remove',
				'label' => 'Removed',
				'optional' => 1,
				'remember' => 1,
			),
			'id' => 'flagged_1',
			'table' => 'flag_content',
			'field' => 'flagged',
			'relationship' => 'flag_content_rel_1',
		),
	));
	$handler->override_option('access', array(
		'type' => 'none',
	));
	$handler->override_option('cache', array(
		'type' => 'none',
	));
	$handler->override_option('exposed_block', TRUE);
	$handler->override_option('header', 'Click on a heading such as "Arrive" to sort by that column.  Or use the last column to prioritize matches for the next time you come back to this page.

	<a href="/share/flight_taxi">All</a> | <a href="/share/flight_taxi/arrival">Matching Arrivals</a> | <a href="/share/flight_taxi/departure">Matching Departures</a> | <a href="http://maps.google.com/maps?f=d&source=s_d&saddr=san+francisco+international+airport&daddr=747+Howard+Street,+San+Francisco,+CA+94103+(Moscone+Center)&geocode=FXf2PQIdJXq0-ClxCPF-63ePgDGNDUHiLZbXlQ%3BCQ7Kh9H-ZD7fFVOKQAIdQU20-CFoS2zSNh8BvSmxZCp9h4CFgDE4t-jNRQDQdg&hl=en&mra=pe&mrcr=0&dirflg=r&ttype=dep&date=02%2F08%2F10&time=12:01am&noexp=0&noal=0&sort=&sll=37.704149,-122.405734&sspn=0.221651,0.617294&ie=UTF8&ll=37.700664,-122.429581&spn=0.22166,0.617294&z=11&start=0">SFO Public Transit directions</a> ');
	$handler->override_option('header_format', '1');
	$handler->override_option('header_empty', 0);
	$handler->override_option('empty', '<div class="message verdant-message">There are no matches for your current search choices.  <br/>Expand your selection choices above, or come back later.</div>');
	$handler->override_option('empty_format', '3');
	$handler->override_option('items_per_page', 0);
	$handler->override_option('style_plugin', 'gmap');
	$handler->override_option('style_options', array(
		'grouping' => '',
		'macro' => '[gmap ]',
		'datasource' => 'location',
		'latfield' => 'picture',
		'lonfield' => 'picture',
		'markers' => 'static',
		'markerfield' => 'picture',
		'markertype' => 'drupal',
	));
	$handler = $view->new_display('page', 'Chart', 'page_1');
	$handler->override_option('style_plugin', 'table');
	$handler->override_option('style_options', array(
		'grouping' => '',
		'override' => 1,
		'sticky' => 0,
		'order' => 'asc',
		'columns' => array(
			'picture' => 'picture',
			'name' => 'name',
			'contact' => 'contact',
			'field_arrival_time_value' => 'field_arrival_time_value',
			'field_departure_time_value' => 'field_departure_time_value',
		),
		'info' => array(
			'picture' => array(
				'sortable' => 0,
				'separator' => '',
			),
			'name' => array(
				'sortable' => 0,
				'separator' => '',
			),
			'contact' => array(
				'separator' => '',
			),
			'field_arrival_time_value' => array(
				'separator' => '',
			),
			'field_departure_time_value' => array(
				'separator' => '',
			),
		),
		'default' => '-1',
	));
	$handler->override_option('path', 'share/ride');
	$handler->override_option('menu', array(
		'type' => 'none',
		'title' => '',
		'description' => '',
		'weight' => 0,
		'name' => 'navigation',
	));
	$handler->override_option('tab_options', array(
		'type' => 'none',
		'title' => '',
		'description' => '',
		'weight' => 0,
	));
	$handler = $view->new_display('page', 'Map', 'page_2');
	$handler->override_option('header', '<strong>Step 1</strong>: Create a rideshare post in the left sidebar.  Those will automatically become your defaults.  <br /><strong>Step 2</strong>: Use the map to skim for a match, or the chart for marking many as "favorites" or "remove."<p><div id="rideshare_map_key" style="display: inline; "><strong>Key</strong>:&nbsp;&nbsp;&nbsp;<img src="http://greeneventsguide.org/swsea/sites/greeneventsguide.org.swsea/modules/gmap/markers/small/bred.png">Rider&nbsp;&nbsp;&nbsp;<img src="http://greeneventsguide.org/swsea/sites/greeneventsguide.org.swsea/modules/gmap/markers/small/orange.png">Either Ride or Drive&nbsp;&nbsp;&nbsp;<img src="http://greeneventsguide.org/swsea/sites/greeneventsguide.org.swsea/modules/gmap/markers/small/yellow.png">Driver&nbsp;&nbsp;&nbsp;<img src="http://greeneventsguide.org/swsea/sites/greeneventsguide.org.swsea/modules/gmap/markers/small/green.png">Bus/Bike/Walk group</div>

		<p>' . $quicklinks


	);
	$handler->override_option('header_format', '3');
	$handler->override_option('header_empty', 1);
	$handler->override_option('style_options', array(
		'macro' => '[gmap markers=drupal::37.68382032669382,-122.4382321536541 |width=98%|height=480px|control=Large |type=Map    ]    ',
		'datasource' => 'location',
		'latfield' => 'picture',
		'lonfield' => 'picture',
		'markers' => 'taxonomy',
		'markerfield' => 'picture',
		'markertype' => 'purple',    // !!! not what we really want
	));
	$handler->override_option('row_plugin', 'node');
	$handler->override_option('row_options', array(
		'relationship' => 'none',
		'build_mode' => 'teaser',
		'links' => 1,
		'comments' => 0,
	));
	$handler->override_option('path', 'share/rides/map');
	$handler->override_option('menu', array(
		'type' => 'none',
		'title' => '',
		'description' => '',
		'weight' => 0,
		'name' => 'navigation',
	));
	$handler->override_option('tab_options', array(
		'type' => 'none',
		'title' => '',
		'description' => '',
		'weight' => 0,
	));


	// Let users play with this (is that a good idea?)
	$views[$view->name] = $view;

	return $view;
}


/**********  Most code below here focuses on the Share profile *********/

// Create a Content Profile block for roomshare
/**
 * Implementation of hook_block()
 */
function verdant_share_block($op='list', $delta=0, $edit=array()) {
  switch ($op) {
    case 'list':
			$blocks[0] = array(
				'info'       => t('Ride Share Profile via Verdant, Block'),
				'status'     => TRUE,
				'weight'     => 0,
				'visibility' => 1,
				'pages'      => 'share/*',  #!!! fix before adding more 
			);

			/* For DrupalConSF, non-ride options removed, but keeping 
			indexed-block style as if there was more than one block.
			$blocks[1]['info'] = t('Room Share Profile Block');
			$blocks[2]['info'] = t('Flight Match Profile Block');*/

      return $blocks;
		case 'view':
			switch ($delta) {

			case '0': 
				// Or, block-verdant_share-0.tpl.php  ??
					$type = 'share_ride';
					global $user;
					$account = $user;
					$blocks['subject'] = t('My Carpool Info');
					$blocks['content'] = 
						'<div id="verdant_rideshare">' . content_profile_page_edit($type, $account) . '</div>';
					//dsm($blocks);
					return $blocks;

				case '2': 
					$type = 'share_flight';
					global $user;
					$account = $user;
					$blocks['subject'] = t("My Flight & Taxi Info");
					$blocks['content'] =  //'Entry form available soon.';

						content_profile_page_edit($type, $account);
					 return $blocks;
			}
  }
}




// Alter the form to point back at same page.
function verdant_share_form_alter(&$form, $form_state, $form_id) {
	/*if ( $form_id == 'share_room_node_form' ) {
		//I'm confused why form_state isn't the value, is it getting altered again later?
		//But this is working code here...
		//$form_state['redirect'] = $form['#action'];
		$form['#redirect'] = 'share/room'; // $form['#action'];
	} elseif ( $form_id == 'share_ride_node_form' ) {
		$form['#redirect'] = 'share/ride';
	} elseif ( $form_id == 'share_flight_node_form' ) {
		$form['#redirect'] = 'share/flight_taxi';
	}
				 */


	if ( $form_id == 'share_ride_node_form') {
//yes, reaching here at right time die("here");
		// add some css ... might need this more often?
		drupal_add_css(drupal_get_path('module', 'verdant_share') .'/css/verdant_share_extra_style.css');
//die("added some css". drupal_get_path('module', 'verdant_share') .'/css/verdant_share_extra_style.css'    );
		// Redirect
		//not ABSOLUTELY positive this can't be tampered with,
		//	$form['#redirect'] = $_GET['q']; 
		//	so...
		if ( $_GET['q'] == 'share/ride/map' ) {
			$form['#redirect'] = 'share/ride/map';
		} else {
			$form['#redirect'] = 'share/ride';
		}
		// Keep form super-simple	 for users
		$form['body_field']['teaser_include']['#access'] = FALSE;
		$form['body_field']['body']['#rows'] = 3;
		$form['#content_extra_fields']['revision_information']['#access'] = FALSE;
		unset($form['body_field']['format']);
		$form['comment_settings']['#access'] = FALSE;
		$form['menu']['#access'] = FALSE;
		$form['path']['#access'] = false;
		$form['author']['#access'] = false;
		$form['options']['#access'] = false;
		$form['revision_information']['#access'] = false;
		// Want to remove long, lat boxes and some text
		//unset( $form['locations'][0] ); 
		// This next one does nothing:
		unset( $form['locations'][0]['#location_settings']['form']['fields']['locpick'] );

		unset($form['body_field']['format']['format']['guidelines']);
		unset($form['attachments']);
	}
}



					 
/* Views for matching times */
/* http://thedrupalblog.com/passing-date-ranges-view-arguments */
// define the db_rewrite_sql hook:
function NOT_USED_FOR_CARPOOLING_AT_THIS_TIME_HERE_FOR_REFERENCE_FOR_FUTURE_WORK_verdant_share_db_rewrite_sql($query, $primary_table = 'n', $primary_field = 'nid', $args = array()) {
  // search for the view
  if (is_object($args['view']) && $args['view']->name=='flight_connections') {
    // if there are no view arguments, don't bother continuing     
   	if (!is_array($args['view']->args)) return;

		// not sure if above is right... I'm getting no arg as an empty array
		//	which still sets is_array true
		//dsm(count($args['view']->args));
		if (count($args['view']->args) < 1 ) return;

		// the argument indicates which field to operate on, arrive, depart?
		$what = $args['view']->args[0]; // for example, arrival time.
		if ( $what == 'departure' ) {
			$field = 'field_departure_time';
		} elseif ( $what == 'arrival' ) {
			$field = 'field_arrival_time';
		} else {
			return;
		}


		// Find the start and end time for that field, for the current user
		global $user;
		$my_trip = content_profile_load('share_flight', $user->uid);
		//dsm($my_trip->{$field}[0][value]); // example: 2010-02-13 02:00:00
		$date = $my_trip->{$field}[0][value];
		$time = strtotime($date);  // seconds since 1970
		$endDate = date('Y-m-d H:m:s', $time + 7200); // add 2 hours
		$startDate =  date('Y-m-d H:m:s', $time - 7200); // subtract 2 hours
		//dsm(array("plus and minus two hours", $startDate, $endDate));


    // validate dates. exit function if issue -> cataldo: eh. 
							    //if (strlen($startDate) && !checkdate(date('m', strtotime($startDate)), date('d', strtotime($startDate)), date('Y', strtotime($startDate)))) return;
							    //if (strlen($endDate) && !checkdate(date('m', strtotime($endDate)), date('d', strtotime($endDate)), date('Y', strtotime($endDate)))) return;

		// create var for where clause
		$where = "";

		// define table alias
		//$tableAlias = 'node_data_field_departure_time_field_departure_time_value';
		$tableAlias = "content_field_" . $what . "_time";


		$where = " {$tableAlias}.field_$what" . "_time_value >= '$startDate' ";
	 	$where .= " and ";
		$where .= " {$tableAlias}.field_$what" . "_time_value <= '$endDate' ";

		//return array('join' => "inner join {content_type_share_flight} $tableAlias on node.vid = $tableAlias.vid and $where");

		return array('join' => "inner join {content_field_$what" . "_time} $tableAlias on node.vid = $tableAlias.vid and $where");

			

    //return array('join' => "inner join {content_field_$what" . "_time} $tableAlias on node.vid = $tableAlias.vid and $where");
  }

}

/*
Now, you can pass the date ranges in as arguments using the views_embed_view function:
<?php
$viewName = 'MYVIEWNAME';
$arg = array('2008-01-01','2008-12-31');
$viewsHtml = views_embed_view($viewName, 'default', $arg);
?>
 */

?>
